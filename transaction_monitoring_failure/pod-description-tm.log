Name:           transaction-monitoring-d87c6f8df-7t82p
Namespace:      transaction-monitoring-pr-464
Priority:       0
Node:           ip-10-27-108-251.eu-west-1.compute.internal/10.27.108.251
Start Time:     Mon, 30 Nov 2020 15:48:43 +0000
Labels:         app=transaction-monitoring
                pod-template-hash=d87c6f8df
Annotations:    kubernetes.io/psp: eks.privileged
Status:         Running
IP:             10.27.117.156
IPs:            <none>
Controlled By:  ReplicaSet/transaction-monitoring-d87c6f8df
Init Containers:
  setup-0:
    Container ID:  docker://6230ff3293ca0da00ce2ce823e5e4a87177f389f7317b10f1bdeacb638bf74c4
    Image:         570953794266.dkr.ecr.eu-west-1.amazonaws.com/ccycloud/transaction-monitoring:0.0.0-SNAPSHOT-PR-464-7
    Image ID:      docker-pullable://570953794266.dkr.ecr.eu-west-1.amazonaws.com/ccycloud/transaction-monitoring@sha256:49d9d1743a8db4a082e537f0845f7f8a25a52fa19efb47c47c1c091649d8bbb0
    Port:          <none>
    Host Port:     <none>
    Args:
      sh
      -c
      bundle exec rails db:reset db:seed
    State:          Terminated
      Reason:       Completed
      Exit Code:    0
      Started:      Mon, 30 Nov 2020 15:48:59 +0000
      Finished:     Mon, 30 Nov 2020 15:49:14 +0000
    Ready:          True
    Restart Count:  0
    Environment:
      DD_AGENT_HOST:       (v1:status.hostIP)
      DATABASE_USER:      root
      ELASTICSEARCH_URL:  http://elasticsearch:9200
      ENVNAME:            stg1
      PORT:               8080
      RABBITMQ_USER:      guest
      RABBITMQ_VHOST:     /
      RAILS_ENV:          demonstration
      ACCOUNT_ID:         <set to the key 'transactionMonitoringAccount' in secret 'service-accounts'>  Optional: false
      CONTACT_ID:         <set to the key 'transactionMonitoringContact' in secret 'service-accounts'>  Optional: false
      DATABASE_PASSWORD:  <set to the key 'transactionMonitoring' in secret 'database-passwords'>       Optional: false
      RABBITMQ_PASSWORD:  <set to the key 'password' in secret 'rabbitmq-credentials'>                  Optional: false
      RAILS_SECRET:       <set to the key 'transactionMonitoring' in secret 'rails-secrets'>            Optional: false
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-549ww (ro)
  setup-1:
    Container ID:  docker://fb756248e4277ba16bc55c732b0546815145400374731cc0e47c3450909c6535
    Image:         570953794266.dkr.ecr.eu-west-1.amazonaws.com/ccycloud/transaction-monitoring:0.0.0-SNAPSHOT-PR-464-7
    Image ID:      docker-pullable://570953794266.dkr.ecr.eu-west-1.amazonaws.com/ccycloud/transaction-monitoring@sha256:49d9d1743a8db4a082e537f0845f7f8a25a52fa19efb47c47c1c091649d8bbb0
    Port:          <none>
    Host Port:     <none>
    Args:
      sh
      -c
      rake elasticsearch:configuration:set_search_timeout
    State:          Terminated
      Reason:       Completed
      Exit Code:    0
      Started:      Mon, 30 Nov 2020 15:49:15 +0000
      Finished:     Mon, 30 Nov 2020 15:49:21 +0000
    Ready:          True
    Restart Count:  0
    Environment:
      DD_AGENT_HOST:       (v1:status.hostIP)
      DATABASE_USER:      root
      ELASTICSEARCH_URL:  http://elasticsearch:9200
      ENVNAME:            stg1
      PORT:               8080
      RABBITMQ_USER:      guest
      RABBITMQ_VHOST:     /
      RAILS_ENV:          demonstration
      ACCOUNT_ID:         <set to the key 'transactionMonitoringAccount' in secret 'service-accounts'>  Optional: false
      CONTACT_ID:         <set to the key 'transactionMonitoringContact' in secret 'service-accounts'>  Optional: false
      DATABASE_PASSWORD:  <set to the key 'transactionMonitoring' in secret 'database-passwords'>       Optional: false
      RABBITMQ_PASSWORD:  <set to the key 'password' in secret 'rabbitmq-credentials'>                  Optional: false
      RAILS_SECRET:       <set to the key 'transactionMonitoring' in secret 'rails-secrets'>            Optional: false
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-549ww (ro)
Containers:
  api:
    Container ID:  docker://7f9f660c33cb1b36cb4da62ac1a77d0237b48d5184d0e405970433275f115ed0
    Image:         570953794266.dkr.ecr.eu-west-1.amazonaws.com/ccycloud/transaction-monitoring:0.0.0-SNAPSHOT-PR-464-7
    Image ID:      docker-pullable://570953794266.dkr.ecr.eu-west-1.amazonaws.com/ccycloud/transaction-monitoring@sha256:49d9d1743a8db4a082e537f0845f7f8a25a52fa19efb47c47c1c091649d8bbb0
    Port:          8080/TCP
    Host Port:     0/TCP
    Args:
      bundle
      exec
      puma
    State:          Running
      Started:      Mon, 30 Nov 2020 15:49:22 +0000
    Ready:          True
    Restart Count:  0
    Limits:
      memory:  1Gi
    Requests:
      cpu:      250m
      memory:   1Gi
    Liveness:   exec [nc -z -w1 localhost 8080] delay=60s timeout=1s period=10s #success=1 #failure=3
    Readiness:  exec [curl -f http://localhost:8080/status] delay=0s timeout=1s period=10s #success=1 #failure=3
    Environment:
      DD_AGENT_HOST:       (v1:status.hostIP)
      DATABASE_USER:      root
      ELASTICSEARCH_URL:  http://elasticsearch:9200
      ENVNAME:            stg1
      PORT:               8080
      RABBITMQ_USER:      guest
      RABBITMQ_VHOST:     /
      RAILS_ENV:          demonstration
      ACCOUNT_ID:         <set to the key 'transactionMonitoringAccount' in secret 'service-accounts'>  Optional: false
      CONTACT_ID:         <set to the key 'transactionMonitoringContact' in secret 'service-accounts'>  Optional: false
      DATABASE_PASSWORD:  <set to the key 'transactionMonitoring' in secret 'database-passwords'>       Optional: false
      RABBITMQ_PASSWORD:  <set to the key 'password' in secret 'rabbitmq-credentials'>                  Optional: false
      RAILS_SECRET:       <set to the key 'transactionMonitoring' in secret 'rails-secrets'>            Optional: false
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-549ww (ro)
  consumers:
    Container ID:  docker://a6f429a31a07afaee891906bf60f9c77d0647c36f74a3bd12fbc52c1296f99aa
    Image:         570953794266.dkr.ecr.eu-west-1.amazonaws.com/ccycloud/transaction-monitoring:0.0.0-SNAPSHOT-PR-464-7
    Image ID:      docker-pullable://570953794266.dkr.ecr.eu-west-1.amazonaws.com/ccycloud/transaction-monitoring@sha256:49d9d1743a8db4a082e537f0845f7f8a25a52fa19efb47c47c1c091649d8bbb0
    Port:          <none>
    Host Port:     <none>
    Args:
      bundle
      exec
      rake
      tms:start_consumers
    State:          Waiting
      Reason:       CrashLoopBackOff
    Last State:     Terminated
      Reason:       Error
      Exit Code:    1
      Started:      Mon, 30 Nov 2020 18:37:10 +0000
      Finished:     Mon, 30 Nov 2020 18:37:15 +0000
    Ready:          False
    Restart Count:  37
    Limits:
      memory:  1Gi
    Requests:
      cpu:     250m
      memory:  1Gi
    Environment:
      DD_AGENT_HOST:       (v1:status.hostIP)
      DATABASE_USER:      root
      ELASTICSEARCH_URL:  http://elasticsearch:9200
      ENVNAME:            stg1
      PORT:               8080
      RABBITMQ_USER:      guest
      RABBITMQ_VHOST:     /
      RAILS_ENV:          demonstration
      ACCOUNT_ID:         <set to the key 'transactionMonitoringAccount' in secret 'service-accounts'>  Optional: false
      CONTACT_ID:         <set to the key 'transactionMonitoringContact' in secret 'service-accounts'>  Optional: false
      DATABASE_PASSWORD:  <set to the key 'transactionMonitoring' in secret 'database-passwords'>       Optional: false
      RABBITMQ_PASSWORD:  <set to the key 'password' in secret 'rabbitmq-credentials'>                  Optional: false
      RAILS_SECRET:       <set to the key 'transactionMonitoring' in secret 'rails-secrets'>            Optional: false
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-549ww (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             False 
  ContainersReady   False 
  PodScheduled      True 
Volumes:
  default-token-549ww:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-549ww
    Optional:    false
QoS Class:       Burstable
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason   Age                     From     Message
  ----     ------   ----                    ----     -------
  Warning  BackOff  2m44s (x762 over 171m)  kubelet  Back-off restarting failed container
